[{"D:\\IT\\order-tracking\\src\\components\\app\\App.tsx":"1","D:\\IT\\order-tracking\\src\\components\\app\\AppRoutes.tsx":"2","D:\\IT\\order-tracking\\src\\components\\layout\\app-layout.tsx":"3","D:\\IT\\order-tracking\\src\\components\\layout\\layout.tsx":"4","D:\\IT\\order-tracking\\src\\constants\\order.ts":"5","D:\\IT\\order-tracking\\src\\index.tsx":"6","D:\\IT\\order-tracking\\src\\modules\\order\\hooks\\use-filter-order.ts":"7","D:\\IT\\order-tracking\\src\\modules\\order\\hooks\\use-order.ts":"8","D:\\IT\\order-tracking\\src\\modules\\order\\order-filter.tsx":"9","D:\\IT\\order-tracking\\src\\modules\\order\\order-list.tsx":"10","D:\\IT\\order-tracking\\src\\modules\\order\\order-statistic.tsx":"11","D:\\IT\\order-tracking\\src\\modules\\order\\order-status.tsx":"12","D:\\IT\\order-tracking\\src\\modules\\order\\order.tsx":"13","D:\\IT\\order-tracking\\src\\pages\\order\\index.tsx":"14","D:\\IT\\order-tracking\\src\\pages\\routes.tsx":"15","D:\\IT\\order-tracking\\src\\react-app-env.d.ts":"16","D:\\IT\\order-tracking\\src\\reportWebVitals.ts":"17","D:\\IT\\order-tracking\\src\\setupTests.ts":"18","D:\\IT\\order-tracking\\src\\store.ts":"19","D:\\IT\\order-tracking\\src\\types\\order.ts":"20"},{"size":325,"mtime":1669997331264,"results":"21","hashOfConfig":"22"},{"size":915,"mtime":1669996886539,"results":"23","hashOfConfig":"22"},{"size":307,"mtime":1669995293971,"results":"24","hashOfConfig":"22"},{"size":738,"mtime":1669998016076,"results":"25","hashOfConfig":"22"},{"size":686,"mtime":1669995864600,"results":"26","hashOfConfig":"22"},{"size":484,"mtime":1669997322797,"results":"27","hashOfConfig":"22"},{"size":2785,"mtime":1669997141676,"results":"28","hashOfConfig":"22"},{"size":1446,"mtime":1669997005188,"results":"29","hashOfConfig":"22"},{"size":2913,"mtime":1669995944384,"results":"30","hashOfConfig":"22"},{"size":2039,"mtime":1669996023621,"results":"31","hashOfConfig":"22"},{"size":622,"mtime":1669996007038,"results":"32","hashOfConfig":"22"},{"size":290,"mtime":1669996019045,"results":"33","hashOfConfig":"22"},{"size":1184,"mtime":1669996255131,"results":"34","hashOfConfig":"22"},{"size":216,"mtime":1669996411407,"results":"35","hashOfConfig":"22"},{"size":254,"mtime":1669996878377,"results":"36","hashOfConfig":"22"},{"size":40,"mtime":1650594970000,"results":"37","hashOfConfig":"22"},{"size":425,"mtime":1650594970000,"results":"38","hashOfConfig":"22"},{"size":374,"mtime":1650594970000,"results":"39","hashOfConfig":"22"},{"size":1093,"mtime":1669997142928,"results":"40","hashOfConfig":"22"},{"size":1094,"mtime":1669996598438,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oq2qbh",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},"D:\\IT\\order-tracking\\src\\components\\app\\App.tsx",[],[],"D:\\IT\\order-tracking\\src\\components\\app\\AppRoutes.tsx",[],[],"D:\\IT\\order-tracking\\src\\components\\layout\\app-layout.tsx",[],[],"D:\\IT\\order-tracking\\src\\components\\layout\\layout.tsx",[],[],"D:\\IT\\order-tracking\\src\\constants\\order.ts",[],[],"D:\\IT\\order-tracking\\src\\index.tsx",[],[],"D:\\IT\\order-tracking\\src\\modules\\order\\hooks\\use-filter-order.ts",[],[],"D:\\IT\\order-tracking\\src\\modules\\order\\hooks\\use-order.ts",["107","108"],[],"import { useCallback, useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { OrderFilterParams } from 'types/order';\r\nimport { DEFAULT_ORDER_FILTER_PARAMS } from 'constants/order';\r\nimport { useFilterOrders } from './use-filter-order';\r\n\r\nexport default function useOrder() {\r\n  const [filterParams, setFilterParams] = useState<OrderFilterParams>(\r\n    DEFAULT_ORDER_FILTER_PARAMS\r\n  );\r\n  const {\r\n    total,\r\n    data: orders,\r\n    totalWarn,\r\n    totalLate,\r\n  } = useFilterOrders(filterParams);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleTableChange = useCallback((pagination: any) => {\r\n    setFilterParams({\r\n      ...filterParams,\r\n      pageSize: pagination.pageSize,\r\n      pageIndex: pagination.current,\r\n    });\r\n  }, []);\r\n\r\n  const handleApplyFilter = useCallback((values: any) => {\r\n    setFilterParams({\r\n      ...filterParams,\r\n      filterBy: values,\r\n    });\r\n  }, []);\r\n\r\n  const handleReload = useCallback(() => {\r\n    setIsLoading(true);\r\n    setFilterParams({\r\n      ...filterParams,\r\n      version: moment().millisecond().toString(),\r\n    });\r\n    setIsLoading(false);\r\n  }, [filterParams]);\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      handleReload();\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return {\r\n    handleReload,\r\n    handleTableChange,\r\n    filterParams,\r\n    isLoading,\r\n    orders,\r\n    total,\r\n    handleApplyFilter,\r\n    totalWarn,\r\n    totalLate,\r\n  };\r\n}\r\n","D:\\IT\\order-tracking\\src\\modules\\order\\order-filter.tsx",["109","110","111"],[],"import React, { FC } from 'react';\nimport { Button, Col, Form, Input, Row, Select, Checkbox } from 'antd';\nimport { CUSTOMER_STATUS } from 'constants/order';\n\ninterface IOrderFilterProps {\n  onFinish: (values: any) => void;\n}\n\nconst OrderFilter = ({ onFinish }: IOrderFilterProps) => {\n  const [form] = Form.useForm();\n\n  return (\n    <>\n      <Form form={form} onFinish={onFinish}>\n        <Row gutter={24}>\n          <Col span={8}>\n            <Form.Item name={`id`} label={`ID`}>\n              <Input placeholder=\"ID\" />\n            </Form.Item>\n          </Col>\n\n          <Col span={8}>\n            <Form.Item name={`riderName`} label={`Rider Name`}>\n              <Input placeholder=\"Rider name\" />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item name={`merchantName`} label={`Merchant Name`}>\n              <Input placeholder=\"Merchant name\" />\n            </Form.Item>\n          </Col>\n\n          <Col span={8}>\n            <Form.Item name={`customerName`} label={`Customer Name`}>\n              <Input placeholder=\"Customer Name\" />\n            </Form.Item>\n          </Col>\n\n          <Col span={8}>\n            <Form.Item name={`customerStatus`} label={`Customer Status`}>\n              <Select allowClear>\n                {Object.values(CUSTOMER_STATUS).map((status) => {\n                  return (\n                    <Select.Option value={status} key={status}>\n                      {status}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={4}>\n            <Form.Item name={`updatedTime`} label={`Updated Time`}>\n              <Select allowClear>\n                <Select.Option value={5}>Last 5 minutes</Select.Option>\n                <Select.Option value={10}>Last 10 minutes</Select.Option>\n                <Select.Option value={15}>Last 15 minutes</Select.Option>\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={4}>\n            <Form.Item label={`Order late status`} name={`lateOrder`}>\n              <Select allowClear>\n                <Select.Option value={'normal'}>Normal</Select.Option>\n                <Select.Option value={'warn'}>Warn</Select.Option>\n                <Select.Option value={'late'}>Late</Select.Option>\n              </Select>\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24} style={{ textAlign: 'right' }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Search\n            </Button>\n            <Button\n              style={{ margin: '0 8px' }}\n              onClick={() => {\n                form.resetFields();\n                onFinish({});\n              }}\n            >\n              Clear\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </>\n  );\n};\n\nexport default OrderFilter;\n","D:\\IT\\order-tracking\\src\\modules\\order\\order-list.tsx",["112"],[],"import { Table } from 'antd';\nimport { TablePaginationConfig } from 'antd/es/table';\nimport moment from 'moment';\nimport OrderStatus from './order-status';\nimport { OrderModel } from 'types/order';\n\ninterface IOrderListProps {\n  orders: OrderModel[];\n  loading: boolean;\n  onChange: (pagination: any) => void;\n  pagination: TablePaginationConfig;\n}\n\nconst columns = [\n  {\n    title: 'ID',\n    dataIndex: 'id',\n    sorter: false,\n    width: '10%',\n  },\n  {\n    title: 'Order Name',\n    dataIndex: 'orderName',\n    sorter: false,\n    width: '10%',\n  },\n  {\n    title: 'Rider Name',\n    dataIndex: 'riderName',\n    sorter: false,\n    width: '10%',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    sorter: false,\n    width: '10%',\n  },\n  {\n    title: 'Merchant Name',\n    dataIndex: 'merchantName',\n    sorter: false,\n    width: '10%',\n  },\n  {\n    title: 'Dishes',\n    render: (_: string, rowData: OrderModel) => (\n      <>{`${rowData.dishesName}/${rowData.dishesPrice}`}</>\n    ),\n    sorter: false,\n    width: '10%',\n  },\n  {\n    title: 'Total Price',\n    dataIndex: 'totalPrice',\n    sorter: false,\n    render: (totalPrice: string) => <strong>{`$${totalPrice}`}</strong>,\n    width: '10%',\n  },\n  {\n    title: 'Status',\n    dataIndex: 'customerStatus',\n    sorter: false,\n    render: (customerStatus: string) => <OrderStatus status={customerStatus} />,\n    width: '10%',\n  },\n  {\n    title: 'Customer Name',\n    dataIndex: 'customerName',\n    sorter: false,\n    width: '10%',\n  },\n  {\n    title: 'Updated Time',\n    dataIndex: 'updatedTime',\n    sorter: true,\n    render: (updatedTime: string) => `${moment(updatedTime).fromNow()}`,\n    width: '10%',\n  },\n];\n\nconst OrderList = ({\n  orders,\n  pagination,\n  loading,\n  onChange,\n}: IOrderListProps) => {\n  return (\n    <>\n      <Table\n        columns={columns}\n        rowKey={(record: OrderModel) => record.id}\n        dataSource={orders}\n        pagination={pagination}\n        loading={loading}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nexport default OrderList;\n","D:\\IT\\order-tracking\\src\\modules\\order\\order-statistic.tsx",[],[],"D:\\IT\\order-tracking\\src\\modules\\order\\order-status.tsx",[],[],"D:\\IT\\order-tracking\\src\\modules\\order\\order.tsx",[],[],"D:\\IT\\order-tracking\\src\\pages\\order\\index.tsx",[],[],"D:\\IT\\order-tracking\\src\\pages\\routes.tsx",[],[],"D:\\IT\\order-tracking\\src\\react-app-env.d.ts",[],[],"D:\\IT\\order-tracking\\src\\reportWebVitals.ts",[],[],"D:\\IT\\order-tracking\\src\\setupTests.ts",[],[],"D:\\IT\\order-tracking\\src\\store.ts",["113"],[],"import orderData from './mock/order-data.json';\nimport moment from 'moment';\nimport { OrderModel } from 'types/order';\nimport { CUSTOMER_STATUS } from 'constants/order';\n\nexport const store = {\n  save: (data: any) => {\n    window.localStorage.setItem('orders', JSON.stringify(data))\n  },\n  getOrders: () => {\n    return JSON.parse(window.localStorage.getItem('orders') || '[]')\n  }\n}\n\nfunction initData() {\n  if (!store.getOrders() || !store.getOrders().length) {\n    store.save(orderData.map((orderData, index) => {\n      return {\n        ...orderData,\n        customerName: `Customer Name ${index}`\n      }\n    }))\n  }\n}\n\nfunction runUpdateOrderJob() {\n  setInterval(() => {\n    const orders: OrderModel[] = store.getOrders() as OrderModel[];\n    store.save(orders.map(order => {\n      return {\n        ...order,\n        customerStatus: Object.values(CUSTOMER_STATUS)[Math.floor(Math.random() * Object.values(CUSTOMER_STATUS).length)],\n        updatedTime: moment().add(5, 'minutes')\n      }\n    }))\n  }, 2000)\n}\n\nexport default function setupData() {\n  initData();\n  runUpdateOrderJob();\n}\n","D:\\IT\\order-tracking\\src\\types\\order.ts",["114"],[],"export type RouteParams = { [key: string]: string | any | undefined };\r\n\r\nexport interface OrderModel {\r\n  id: number,\r\n  customerStatus: CustomerStatus,\r\n  riderName: string,\r\n  orderName: string,\r\n  customerName: string,\r\n  address: string,\r\n  merchantName: string,\r\n  merchantAddress: string,\r\n  dishesName: string,\r\n  dishesPrice: string,\r\n  totalPrice: string,\r\n  updatedTime: string,\r\n}\r\n\r\nexport enum CustomerStatus {\r\n  Created = 'Created',\r\n  Accepted= 'Accepted',\r\n  DriverAssigned = 'DriverAssigned',\r\n  Delivering = 'Delivering',\r\n  Canceled = 'Canceled',\r\n  Done = 'Done',\r\n}\r\n\r\nexport interface OrderFilterParams_FilterBy {\r\n  id: number,\r\n  customerStatus: CustomerStatus,\r\n  riderName: string,\r\n  merchantName: string,\r\n  updatedTime: string,\r\n}\r\n\r\nexport interface OrderFilterParams {\r\n  pageIndex: number,\r\n  pageSize: number,\r\n  orderBy: string,\r\n  version?: string,\r\n  orderType: 'asc' | 'desc',\r\n  filterBy?: OrderFilterParams_FilterBy\r\n}\r\n\r\nexport interface OrderListResponseModel {\r\n  data: OrderModel[],\r\n  total: number,\r\n  totalLate: number,\r\n  totalWarn: number,\r\n}\r\n",{"ruleId":"115","severity":1,"message":"116","line":20,"column":54,"nodeType":"117","messageId":"118","endLine":20,"endColumn":57,"suggestions":"119"},{"ruleId":"115","severity":1,"message":"116","line":28,"column":50,"nodeType":"117","messageId":"118","endLine":28,"endColumn":53,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":19},{"ruleId":"121","severity":1,"message":"125","line":2,"column":49,"nodeType":"123","messageId":"124","endLine":2,"endColumn":57},{"ruleId":"115","severity":1,"message":"116","line":6,"column":22,"nodeType":"117","messageId":"118","endLine":6,"endColumn":25,"suggestions":"126"},{"ruleId":"115","severity":1,"message":"116","line":10,"column":26,"nodeType":"117","messageId":"118","endLine":10,"endColumn":29,"suggestions":"127"},{"ruleId":"115","severity":1,"message":"116","line":7,"column":16,"nodeType":"117","messageId":"118","endLine":7,"endColumn":19,"suggestions":"128"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":53,"nodeType":"117","messageId":"118","endLine":1,"endColumn":56,"suggestions":"129"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["130","131"],["132","133"],"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.",["134","135"],["136","137"],["138","139"],["140","141"],{"messageId":"142","fix":"143","desc":"144"},{"messageId":"145","fix":"146","desc":"147"},{"messageId":"142","fix":"148","desc":"144"},{"messageId":"145","fix":"149","desc":"147"},{"messageId":"142","fix":"150","desc":"144"},{"messageId":"145","fix":"151","desc":"147"},{"messageId":"142","fix":"152","desc":"144"},{"messageId":"145","fix":"153","desc":"147"},{"messageId":"142","fix":"154","desc":"144"},{"messageId":"145","fix":"155","desc":"147"},{"messageId":"142","fix":"156","desc":"144"},{"messageId":"145","fix":"157","desc":"147"},"suggestUnknown",{"range":"158","text":"159"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"158","text":"160"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"161","text":"159"},{"range":"161","text":"160"},{"range":"162","text":"159"},{"range":"162","text":"160"},{"range":"163","text":"159"},{"range":"163","text":"160"},{"range":"164","text":"159"},{"range":"164","text":"160"},{"range":"165","text":"159"},{"range":"165","text":"160"},[632,635],"unknown","never",[837,840],[210,213],[296,299],[209,212],[52,55]]